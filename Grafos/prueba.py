# -*- coding: utf-8 -*-
"""Prueba.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LdZStvCo3C7hl4ifkV9gStuENAZ1FRXc
"""

# Commented out IPython magic to ensure Python compatibility.
# Importando algunas librerías que utilizaremos
# Networkx para grafos
import networkx as nx
# Pandas quee proporciona estructuras de datos similares a los dataframes de R
import pandas as pd

# Mostrar imágenes permite asedr a librerias de internet 
from IPython.display import HTML

# Mathplotlib para la generación de gráficos a partir de datos contenidos en listas o arrays
import matplotlib.pyplot as plt

# %matplotlib inline
plt.rcParams['figure.figsize'] = (20.0, 10.0)

"""Para este ejemplo inicial utilizamos solo 9 rutas, sin costo y se almacena en el grafo g 
Archivo Prueba.csv
"""

#Habilitar la carga de archivos 
from google.colab import files
uploades = files.upload()

df1 = pd.read_csv('Prueba.csv', sep=';')

df1.describe()

g= nx.DiGraph()
for row in range(len(df1)):
    g.add_edge(df1.loc[row,"origen"],df1.loc[row,"destino"])

g.nodes(data=True)

"""BOG APARECE CON UN ESPACIO ADICIONAL"""

#PARA GRAFICAR EL NODO EN FORMA DE CIRCULO
nx.draw_circular(g,
                 node_color="lightblue",
                 edge_color="gray",
                 font_size=24,
                 width=2, with_labels=True, node_size=3500
)



nx.draw_planar(g,node_color="lightblue",
                 edge_color="gray",
                 font_size=24,
                 width=2, with_labels=True, node_size=3500)

nx.draw_spectral(g,node_color="lightblue",
                 edge_color="gray",
                 font_size=24,
                 width=2, with_labels=True, node_size=3500)